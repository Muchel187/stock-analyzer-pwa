Fix: Portfolio loading with improved error handling and logging

PROBLEM:
- Portfolio page showed empty table despite data in database
- No console logs for debugging
- No error handling for API failures

DIAGNOSIS:
- Database: ✅ GME stock with 1120 shares present
- API Endpoint: ✅ Returns correct data (200 OK)
- Frontend: ❌ Missing error handling and validation

IMPLEMENTED FIXES:

1. Frontend (static/js/app.js):
   - Add detailed console logging with [Portfolio] prefix
   - Implement response validation (items, summary structure)
   - Add loading state ("Lade Portfolio...")
   - Add error state with retry button
   - Implement null-safety for missing data
   - Add try-catch with meaningful error messages
   - Improve number formatting with toLocaleString
   - Add error-resilient rendering (failed items don't break display)
   - Add empty state with "Add Transaction" button

2. Backend (app/services/portfolio_service.py):
   - Add structured logging with [Portfolio] prefix
   - Implement continue-on-error for individual stocks
   - Add user-id validation
   - Guarantee valid response structure (even on errors)
   - Add detailed summary logs (Value, Invested, G/L)
   - Add try-catch with traceback

3. API Endpoint (app/routes/portfolio.py):
   - Add JWT token validation
   - Add user-id type conversion (string → int)
   - Guarantee JSON structure in response
   - Add error logging with traceback
   - Return valid empty structure on 500 errors

TESTING:
- ✅ Database query: GME with 1120 shares found
- ✅ API endpoint: 200 OK with correct data
- ✅ JavaScript syntax: No errors
- ✅ Server logs: [Portfolio] logs appear correctly
- ✅ Response validation: All fields present

Based on OPTIMIZATION_PLAN.md recommendations:
- Error handling framework
- Loading state management
- Graceful degradation
- Structured logging
- Input validation
- Robustness improvements

API Response Example:
{
  "items": [{"ticker": "GME", "shares": 1120.0, "gain_loss_percent": 10.76}],
  "summary": {"total_value": 31012.8, "positions": 1}
}

FILES CHANGED:
- static/js/app.js (loadPortfolio, displayPortfolioDetails)
- app/services/portfolio_service.py (get_portfolio)
- app/routes/portfolio.py (get_portfolio endpoint)

DOCUMENTATION ADDED:
- PORTFOLIO_FIX_SUMMARY.md
- PORTFOLIO_DEBUG_QUICK_REF.md
- PORTFOLIO_FIX_COMPLETE.txt

USER TESTING REQUIRED:
Navigate to http://127.0.0.1:5000/#portfolio (NOT #dashboard)
Check browser console for [Portfolio] logs
