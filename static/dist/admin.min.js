(()=>{class e{constructor(){this.currentPage=1,this.perPage=10,this.searchTerm="",this.filterType="",this.currentUser=null,this.userToDelete=null,this.userToEdit=null}async init(){if(!localStorage.getItem("access_token"))return void(window.location.href="/");try{await api.checkAdmin()}catch(e){return console.error("Admin check failed:",e),this.showNotification("Keine Admin-Berechtigung","error"),void setTimeout(()=>{window.location.href="/"},2e3)}const e=localStorage.getItem("username");e&&(document.getElementById("userDisplay").textContent=`Admin: ${e}`),await this.loadSystemStats(),await this.loadUsers(),this.setupEventListeners(),setInterval(()=>this.loadSystemStats(),6e4)}setupEventListeners(){const e=document.getElementById("userSearch");e&&e.addEventListener("input",this.debounce(()=>{this.searchTerm=e.value,this.currentPage=1,this.loadUsers()},500));const t=document.getElementById("userFilter");t&&t.addEventListener("change",()=>{this.filterType=t.value,this.currentPage=1,this.loadUsers()}),window.addEventListener("click",e=>{e.target.classList.contains("modal")&&(e.target.style.display="none")})}async loadSystemStats(){try{const e=await api.getAdminStats();this.updateStatCard("totalUsers",e.total_users),this.updateStatCard("activeToday",e.active_users_today),this.updateStatCard("totalPortfolios",e.total_portfolios),this.updateStatCard("totalAlerts",e.total_alerts)}catch(e){console.error("Error loading stats:",e)}}updateStatCard(e,t){const n=document.getElementById(e);n&&(n.textContent=void 0!==t?t.toLocaleString("de-DE"):"-")}async loadUsers(){this.showLoading(!0);try{const e={page:this.currentPage,per_page:this.perPage};this.searchTerm&&(e.search=this.searchTerm),"admin"===this.filterType?e.is_admin=!0:"regular"===this.filterType&&(e.is_admin=!1);const t=await api.getAdminUsers(e);this.renderUsersTable(t.users),this.renderPagination(t)}catch(e){console.error("Error loading users:",e),this.showNotification("Fehler beim Laden der Benutzer","error")}finally{this.showLoading(!1)}}renderUsersTable(e){const t=document.getElementById("usersTableBody");t&&(0!==e.length?t.innerHTML=e.map(e=>`\n            <tr>\n                <td>${e.id}</td>\n                <td>${this.escapeHtml(e.username)}</td>\n                <td>${this.escapeHtml(e.email)}</td>\n                <td>\n                    <span class="badge ${e.is_admin?"badge-admin":"badge-user"}">\n                        ${e.is_admin?"Admin":"Benutzer"}\n                    </span>\n                </td>\n                <td>${this.formatDate(e.created_at)}</td>\n                <td>${e.last_login?this.formatDate(e.last_login):"Nie"}</td>\n                <td>${e.portfolio_count||0}</td>\n                <td>\n                    <div class="action-buttons">\n                        <button class="btn-icon" onclick="adminApp.viewUserDetails(${e.id})" title="Details">\n                            üëÅÔ∏è\n                        </button>\n                        <button class="btn-icon" onclick="adminApp.editUser(${e.id})" title="Bearbeiten">\n                            ‚úèÔ∏è\n                        </button>\n                        <button class="btn-icon" onclick="adminApp.toggleAdminStatus(${e.id}, ${e.is_admin})" title="Admin-Status">\n                            ${e.is_admin?"üîì":"üîí"}\n                        </button>\n                        <button class="btn-icon btn-danger" onclick="adminApp.deleteUser(${e.id}, '${this.escapeHtml(e.username)}')" title="L√∂schen">\n                            üóëÔ∏è\n                        </button>\n                    </div>\n                </td>\n            </tr>\n        `).join(""):t.innerHTML='\n                <tr>\n                    <td colspan="8" class="text-center">Keine Benutzer gefunden</td>\n                </tr>\n            ')}renderPagination(e){const t=document.getElementById("usersPagination");if(!t)return;const n=e.total_pages||1,i=e.page||1;let s='<div class="pagination-controls">';i>1&&(s+=`<button class="btn-page" onclick="adminApp.goToPage(${i-1})">‚Äπ</button>`);for(let e=1;e<=n;e++)1===e||e===n||e>=i-2&&e<=i+2?s+=`<button class="btn-page ${e===i?"active":""}"\n                         onclick="adminApp.goToPage(${e})">${e}</button>`:e!==i-3&&e!==i+3||(s+='<span class="page-dots">...</span>');i<n&&(s+=`<button class="btn-page" onclick="adminApp.goToPage(${i+1})">‚Ä∫</button>`),s+="</div>",s+=`<div class="pagination-info">Zeige ${e.users.length} von ${e.total} Benutzern</div>`,t.innerHTML=s}goToPage(e){this.currentPage=e,this.loadUsers()}async viewUserDetails(e){this.showLoading(!0);try{const t=await api.getAdminUserDetails(e),n=document.getElementById("userDetailsContent");n&&(n.innerHTML=`\n                    <div class="user-details">\n                        <h3>${this.escapeHtml(t.username)}</h3>\n                        <p class="user-email">${this.escapeHtml(t.email)}</p>\n\n                        <div class="details-grid">\n                            <div class="detail-item">\n                                <label>Benutzer ID:</label>\n                                <span>${t.id}</span>\n                            </div>\n                            <div class="detail-item">\n                                <label>Rolle:</label>\n                                <span class="badge ${t.is_admin?"badge-admin":"badge-user"}">\n                                    ${t.is_admin?"Admin":"Benutzer"}\n                                </span>\n                            </div>\n                            <div class="detail-item">\n                                <label>Registriert:</label>\n                                <span>${this.formatDate(t.created_at)}</span>\n                            </div>\n                            <div class="detail-item">\n                                <label>Letzter Login:</label>\n                                <span>${t.last_login?this.formatDate(t.last_login):"Nie"}</span>\n                            </div>\n                        </div>\n\n                        <h4>Portfolio Statistiken</h4>\n                        <div class="stats-grid">\n                            <div class="stat-item">\n                                <label>Positionen:</label>\n                                <span>${t.portfolio?.positions||0}</span>\n                            </div>\n                            <div class="stat-item">\n                                <label>Gesamtwert:</label>\n                                <span>‚Ç¨ ${this.formatNumber(t.portfolio?.total_value||0)}</span>\n                            </div>\n                            <div class="stat-item">\n                                <label>Investiert:</label>\n                                <span>‚Ç¨ ${this.formatNumber(t.portfolio?.total_invested||0)}</span>\n                            </div>\n                        </div>\n\n                        <div class="activity-stats">\n                            <div class="stat-row">\n                                <label>Watchlist Items:</label>\n                                <span>${t.watchlist_count||0}</span>\n                            </div>\n                            <div class="stat-row">\n                                <label>Aktive Alerts:</label>\n                                <span>${t.alerts_count||0}</span>\n                            </div>\n                            <div class="stat-row">\n                                <label>Transaktionen:</label>\n                                <span>${t.transactions_count||0}</span>\n                            </div>\n                        </div>\n                    </div>\n                `),this.showModal("userDetailsModal")}catch(e){console.error("Error loading user details:",e),this.showNotification("Fehler beim Laden der Benutzerdetails","error")}finally{this.showLoading(!1)}}async editUser(e){this.showLoading(!0);try{const t=await api.getAdminUserDetails(e);this.userToEdit=t,document.getElementById("editUserId").value=t.id,document.getElementById("editUsername").value=t.username,document.getElementById("editEmail").value=t.email,this.showModal("editUserModal")}catch(e){console.error("Error loading user for edit:",e),this.showNotification("Fehler beim Laden des Benutzers","error")}finally{this.showLoading(!1)}}async saveUserEdit(){const e=document.getElementById("editUserId").value,t=document.getElementById("editUsername").value,n=document.getElementById("editEmail").value;if(t&&n){this.showLoading(!0);try{await api.updateAdminUser(e,{username:t,email:n}),this.showNotification("Benutzer erfolgreich aktualisiert","success"),this.closeModal("editUserModal"),await this.loadUsers()}catch(e){console.error("Error updating user:",e),this.showNotification(e.error||"Fehler beim Aktualisieren des Benutzers","error")}finally{this.showLoading(!1)}}else this.showNotification("Bitte alle Felder ausf√ºllen","error")}async toggleAdminStatus(e,t){if(confirm(`M√∂chten Sie diesem Benutzer Admin-Rechte ${t?"entfernen":"erteilen"}?`)){this.showLoading(!0);try{await api.toggleAdminStatus(e),this.showNotification("Admin-Status erfolgreich ge√§ndert","success"),await this.loadUsers(),await this.loadSystemStats()}catch(e){console.error("Error toggling admin status:",e),this.showNotification(e.error||"Fehler beim √Ñndern des Admin-Status","error")}finally{this.showLoading(!1)}}}deleteUser(e,t){this.userToDelete={id:e,username:t},document.getElementById("deleteUserInfo").innerHTML=`<strong>Benutzer:</strong> ${this.escapeHtml(t)} (ID: ${e})`,this.showModal("deleteConfirmModal")}async confirmDelete(){if(this.userToDelete){this.showLoading(!0);try{await api.deleteAdminUser(this.userToDelete.id),this.showNotification("Benutzer erfolgreich gel√∂scht","success"),this.closeModal("deleteConfirmModal"),this.userToDelete=null,await this.loadUsers(),await this.loadSystemStats()}catch(e){console.error("Error deleting user:",e),this.showNotification(e.error||"Fehler beim L√∂schen des Benutzers","error")}finally{this.showLoading(!1)}}}logout(){localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),localStorage.removeItem("username"),window.location.href="/"}showModal(e){const t=document.getElementById(e);t&&(t.style.display="block")}closeModal(e){const t=document.getElementById(e);t&&(t.style.display="none")}showLoading(e){const t=document.getElementById("loadingSpinner");t&&(t.style.display=e?"flex":"none")}showNotification(e,t="info"){const n=document.getElementById("notification");n&&(n.className=`notification ${t}`,n.textContent=e,n.style.display="block",setTimeout(()=>{n.style.display="none"},3e3))}formatDate(e){return e?new Date(e).toLocaleString("de-DE",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"}):"-"}formatNumber(e){return e.toLocaleString("de-DE",{minimumFractionDigits:2,maximumFractionDigits:2})}escapeHtml(e){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,e=>t[e])}debounce(e,t){let n;return function(...i){clearTimeout(n),n=setTimeout(()=>{clearTimeout(n),e(...i)},t)}}}"undefined"!=typeof window&&(window.AdminApp=e)})(),"/admin"===window.location.pathname&&document.addEventListener("DOMContentLoaded",()=>{"undefined"!=typeof AdminApp&&(window.adminApp=new AdminApp,window.adminApp.init())});